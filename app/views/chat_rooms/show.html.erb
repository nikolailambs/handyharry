
<div class="container">
  <div class="row">
    <div class="col-sm-6 col-sm-offset-3 chat-body">
      <div class="chat-header">
        <%= link_to 'Back', chat_rooms_path, class:"to-inbox-btn" %>
        <h4>
          <%= current_user.handy ? @chat_room.name[:client].build_user_name : @chat_room.name[:handy].build_user_name %>
        </h4>
        <% if current_user.handy %>
        <%= image_tag 'client.png', class:"avatar chat-avatar" %>
        <% else %>
        <%= image_tag 'handy.png', class:"avatar chat-avatar" %>
        <% end %>
      </div>
      <div class="messages">
        <% @chat_room.messages.each do |message| %>
        <%= render 'messages/message', message: message, user_is_messages_author: message.user == current_user %>
        <% end %>
      </div>
      <div class="dropdown-menu" id="suggesstion-box" data-toggle="dropdown"></div>
      <div id="create-message">
        <%= simple_form_for [ @chat_room, Message.new ], remote: true, html: { autocomplete: 'off' } do |f| %>
        <%= f.input :content, label: false %>
        <%= f.input :read, as: :hidden, :input_html => { :value => true } %>
        <% end %>
      </div>
    </div>
  </div>
</div>
  <div class="keyboard"></div>
<% content_for :after_js do %>

 <!-- Text Autocomplete plugin -->
      <!-- <script src="./jquery.textcomplete.min.js"></script> -->
      <!-- Algolia Search API Client - latest version -->
      <script src="https://cdn.jsdelivr.net/algoliasearch/3/algoliasearch.min.js"></script>

<script>
  scrollLastMessageIntoView();
  App['chat_room_<%= @chat_room.id %>'] = App.cable.subscriptions.create(
    { channel: 'ChatRoomsChannel', chat_room_id: <%= @chat_room.id %> },
    {
      received: (data) => {
        if (data.current_user_id !== <%= current_user.id %>) {
          const messagesContainer = document.querySelector('.messages');
          messagesContainer.insertAdjacentHTML('beforeend', data.message_partial);
          scrollLastMessageIntoView();
        }
      }
    });

  // #1 - Search configuration - To replace with your own
  var ALGOLIA_APPID = '<%= ENV['AlgoliaApplicationID'] %>';
  var ALGOLIA_SEARCH_APIKEY = '<%= ENV['AlgoliaSearchOnly'] %>';
  var ALGOLIA_INDEX_NAME = 'Project';
  var NB_RESULTS_DISPLAYED = 5;
  // #2- Algolia API Client Initialization
  var algoliaClient = new algoliasearch(ALGOLIA_APPID, ALGOLIA_SEARCH_APIKEY);
  var index = algoliaClient.initIndex(ALGOLIA_INDEX_NAME);
  var lastQuery = '';

  $('#message_content').textcomplete([
    {
      // #3 - Regular expression used to trigger the autocomplete dropdown
      match: /(^|\s)@(\w*(?:\s*\w*))$/,
      // #4 - Function called at every new keystroke
      search: function(query, callback) {
        lastQuery = query;
        index.search(lastQuery, { hitsPerPage: NB_RESULTS_DISPLAYED })
          .then(function searchSuccess(content) {
            if (content.query === lastQuery) {
              // console.log(content)
              callback(content.hits);
            }
          })
          .catch(function searchFailure(err) {
            console.error(err);
          });
      },
      // #5 - Template used to display each result obtained by the Algolia API
      template: function (hit) {
        // Returns the highlighted version of the name attribute
        console.log(hit)
        return hit._highlightResult.title.value;
      },
      // #6 - Template used to display the selected result in the textarea
      replace: function (hit) {
        return ' @' + hit.title.trim() + ' ';
      }
    }, {
      dropdownClassName: 'dropup'
    }]);

  </script>
<% end %>






















