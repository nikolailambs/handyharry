
<div class="container">
  <div class="row">
    <div class="col-sm-6 col-sm-offset-3 chat-body">
      <div class="chat-header">
        <%= link_to 'Back', chat_rooms_path, class:"to-inbox-btn" %>
        <h4>
          <%= current_user.handy ? @chat_room.name[:client].build_user_name : @chat_room.name[:handy].build_user_name %>
        </h4>
        <% if current_user.handy %>
        <%= image_tag 'client.png', class:"avatar chat-avatar" %>
        <% else %>
        <%= image_tag 'handy.png', class:"avatar chat-avatar" %>
        <% end %>
      </div>
      <div class="messages">
        <% @chat_room.messages.each do |message| %>
        <%= render 'messages/message', message: message, user_is_messages_author: message.user == current_user %>
        <% end %>
      </div>
      <div id="suggesstion-box"></div>
      <div id="create-message">
        <%= simple_form_for [ @chat_room, Message.new ], remote: true do |f| %>
        <%= f.input :content, label: false %>
        <%= f.input :read, as: :hidden, :input_html => { :value => true } %>
        <% end %>
      </div>
    </div>
  </div>
</div>
<% content_for :after_js do %>



<!-- jquery auto complete  -->
  <!-- JS file -->
  <!-- <script src="../../../node_modules/easy-autocomplete/dist/jquery.easy-autocomplete.min.js"></script> -->

  <!-- CSS file -->
  <!-- <link rel="stylesheet" href="../../../node_modules/easy-autocomplete/dist/easy-autocomplete.min.css"> -->

  <!-- Additional CSS Themes file - not required-->
  <!-- <link rel="stylesheet" href="../../../node_modules/easy-autocomplete/dist/easy-autocomplete.themes.min.css"> -->
<!-- jquery auto complete end -->

<script>
  scrollLastMessageIntoView();
  App['chat_room_<%= @chat_room.id %>'] = App.cable.subscriptions.create(
    { channel: 'ChatRoomsChannel', chat_room_id: <%= @chat_room.id %> },
    {
      received: (data) => {
        if (data.current_user_id !== <%= current_user.id %>) {
          const messagesContainer = document.querySelector('.messages');
          messagesContainer.insertAdjacentHTML('beforeend', data.message_partial);
          scrollLastMessageIntoView();
        }
      }
    });

  // build a list with the array
    const result = document.querySelector("#suggesstion-box");
    function addToSearchList(dataArray) {
      document.querySelector("#suggesstion-box").innerHTML = "";
      console.log(dataArray)
      // dataArray.forEach((title) => { console.log(title) })
      dataArray.forEach((title) => {
        result.insertAdjacentHTML("beforeend", `<li class="list-group-item">${title}</li>`);
      });
    };

// <!-- search start -->
document.addEventListener("keyup", (event) => {
  var messageText = document.getElementById("message_content").value;

  var textMessage = messageText.split(" ")
  if( textMessage[textMessage.length-1].includes("@")){
    var result = filter(messageText.split(" "), 0, "@" )[0]

      console.log(textMessage)
    // aloglia search
    var client = algoliasearch('<%= ENV['AlgoliaApplicationID'] %>', '<%= ENV['AlgoliaSearchOnly'] %>');
    var index = client.initIndex('Project');

          index.search(result, { hitsPerPage: 5, page: 0 })
            .then(function searchDone(content) {

            var options = {
              data: [String(content.hits[0].title), String(content.hits[1].title)]
            };
            // console.log(options)
            addToSearchList(options.data)
            })
            .catch(function searchFailure(err) {
            console.error(err);
            document.querySelector("#suggesstion-box").innerHTML = "";
            });
        }else{
          document.querySelector("#suggesstion-box").innerHTML = "";
        }
      });
  </script>
  <% end %>






















